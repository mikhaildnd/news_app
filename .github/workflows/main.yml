name: linting, testing, building

on:
  pull_request:
    branches: [ main, develop ]

# üîπ –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤—Å–µ—Ö jobs
env:
  HUSKY: 0   # –æ—Ç–∫–ª—é—á–∞–µ–º husky –≤–Ω—É—Ç—Ä–∏ CI

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  # -------------------- LINT --------------------
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node

      - name: Lint TypeScript
        run: npm run lint:ts

      - name: Lint SCSS
        run: npm run lint:scss

  # -------------------- BUILD --------------------
  build:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node

      - name: Build production project
        run: npm run build:prod

  # -------------------- UNIT TESTS --------------------
  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node

      - name: Run unit tests
        run: npm run test:unit

  # -------------------- SCREENSHOT TESTS --------------------
  screenshot-tests:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node

      - name: Cache Storybook build
        id: storybook-cache
        uses: actions/cache@v4
        with:
          path: storybook-static
          key: >-
            ${{ runner.os }}-${{ matrix.node-version }}-storybook-
            ${{ hashFiles('package-lock.json', '**/*.stories.@(js|jsx|ts|tsx|mdx)') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-storybook-

      - name: Build Storybook
        if: steps.storybook-cache.outputs.cache-hit != 'true'
        run: npm run storybook:build

      # üîπ –∑–∞–ø—É—Å–∫–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è Storybook
      - name: Serve storybook static
        run: |
          npx http-server ./storybook-static -p 6006 >/tmp/storybook.log 2>&1 &
          npx wait-on http://localhost:6006

      - name: Run screenshot tests
        run: npm run test:ui:ci

      # üîπ –µ—Å–ª–∏ —Ç–µ—Å—Ç—ã —É–ø–∞–ª–∏ ‚Äî –¥–∞–º–ø–∏–º DOM, —Å–∫—Ä–∏–Ω—ã –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã
      - name: Dump failing story DOM & screenshot (debug)
        if: failure()
        run: |
          mkdir -p artifacts
          npm ci
          npm install puppeteer --no-save
          # –∑–¥–µ—Å—å –ø—Ä–∏–º–µ—Ä –¥–ª—è –æ–¥–Ω–æ–π —Å—Ç–æ—Ä–∏—Å; –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –¥–ª—è –≤—Å–µ—Ö
          node ./scripts/dump-story-dom.js "http://localhost:6006/iframe.html?id=entities-profilecard--primary&viewMode=story" ./artifacts/profilecard

      - name: Upload Loki + debug artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: loki-debug-${{ matrix.node-version }}
          path: |
            .loki/difference
            .loki/current
            .loki/reference
            artifacts/**
            /tmp/storybook.log

name: linting, testing, building

on:
  pull_request:
    branches: [ main, develop ]

env:
  HUSKY: 0 # отключаем husky внутри CI

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  # -------------------- LINT --------------------
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node

      - name: Lint TypeScript
        run: npm run lint:ts

      - name: Lint SCSS
        run: npm run lint:scss

  # -------------------- BUILD --------------------
  build:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node

      - name: Build production project
        run: npm run build:prod

  # -------------------- UNIT TESTS --------------------
  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node

      - name: Run unit tests
        run: npm run test:unit

  # -------------------- SCREENSHOT TESTS --------------------
  screenshot-tests:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-node

      - name: Cache Storybook build
        id: storybook-cache
        uses: actions/cache@v4
        with:
          path: storybook-static
          key: >-
            ${{ runner.os }}-${{ matrix.node-version }}-storybook-
            ${{ hashFiles('package-lock.json', '**/*.stories.@(js|jsx|ts|tsx|mdx)') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-storybook-

      - name: Build Storybook
        if: steps.storybook-cache.outputs.cache-hit != 'true'
        run: npm run storybook:build

      - name: Serve storybook static
        run: |
          npx http-server ./storybook-static -p 6006 >/tmp/storybook.log 2>&1 &
          npx wait-on http://localhost:6006

      - name: Run screenshot tests
        run: npm run test:ui:ci

      # Если тесты упали — собираем все debug-артефакты
      - name: Collect debug artifacts
        if: failure()
        run: |
          mkdir -p artifacts
          # ставим только puppeteer, без всего проекта
          npm install puppeteer --no-save --ignore-scripts
          # Скрипт можно доработать, чтобы он сам проходил по списку упавших сторисов.
          # Пока дампим главную страницу Storybook, чтобы видеть статику
          node ./scripts/dump-story-dom.js "http://localhost:6006" ./artifacts/storybook-root

      - name: Upload Loki + debug artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: loki-debug-${{ matrix.node-version }}
          path: |
            .loki/difference
            .loki/current
            .loki/reference
            artifacts/**
            /tmp/storybook.log
